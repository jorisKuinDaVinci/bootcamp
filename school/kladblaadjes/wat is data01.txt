lessonup.app
zelf werken aan opdrachten


tussen de select en de from kan ik de ..... bepalen.
na de where beinvloed ik het aantal ....


Evt. DBeaver (heb ik geintaleerd)

#insert into teachers (firstName, lastName, code,email) values("Joris", "Kuin", "HBU", "Joris"
# (later afmaken als het wordt laten zien regels hierboven)
Let op: Wil je een kolom van het type string selecteren? Let dan op de strings dus bijv. ... where name = "Pelt"

de not levert precies het tegenovergesteld. Dus 
	  ... where type = "Sheep"
tegenover ... where not type = "Sheep"

not id = 2 (doet het tegenovergestelde)


select * from teachers order by lastName asc

select * from teachers order by lastName desc

select * from teachers where infix not null

select * from teachers order by phone

select * from teachers where email like '%@test.nl'

select email from teachers where email like '%@test.nl'

select count(*) from teachers where email like '%@test.nl'

select length(lastName), lastname from teachers order by length(lastname) desc limit 1

select sum(defense) as totale_verdediging from animal where speed < 5

select * from animal where speed = ()

select * from animal where id = 77

select animal.type, (select name from person where id = animal.owner) from animal 

select animal.type, (select name from person where id = animal.owner) as eigenaar from animal 

select animal.type, (select name from person where id = animal.owner) as eigenaar from animal where not eigenaar is null

select *, (select name from person where id = owner) as eigenaar from animal where id = 77 

select *, (select name from person as p where p.id = owner) from animal as a

select avg(speed) from animal

select min(speed) from animal 

select *, (select name from person where id = animal.owner) as eigenaar, from animal where owner = 2

---------------------------------------------------------------------------------------------------------------------------

join


select animal. *, person.name, person.sex from animal left join person on person.id = animal.owner

select animal. *, person.name, person.sex from animal join person on person.id = animal.owner

-----------------------------------------------------------------------------------------------------------------------------------------

select count(*) from where speed = (select min(speed) from animal)

select type, defense from where speed = (select min(speed) from animal)

select count(*) from animal where owner <> 0

select min(*) from teachers 

select max(*) from teachers 

select avg(*) from teachers #(gemiddelde)

select * from teachers where limit 2

select * from teachers where fetch first 2 rows only

select * from teachers fetch first 2 rows only

select * from teachers limit 2

select * from teachers order by id desc limit 2

select * from teachers limit 5

select * from courses where has_exame = 1

select * from courses where has_exame = 1 and is_avo = 1

select * from courses 

select * from courses where name in ("Rekenen", "Engels")

select * from teachers where lastname = "Slemmer"

select * from teachers where lastname like "%e%" (% = alles met in de code is dat alles met e)

select * from teachers where lastname like "%er" (% = alles met in de code is dat alles met er)

select * from teachers where lastname like "_lemmer" (% = alles met in de code is dat alles met er)

#like = zoals

wil je meer types dan kun je ook een in gebruiken.
Bijv. ... where type in ("Sheep", "Wolf")

Welke planten hebben een naam waarvan de eerste letter een b en de derde letter een e is?

select plantnaam 
from `plant` 
where plantnaam like "b_e%"



select plantnaam, `bloeitijd-einde`, `bloeitijd-start`, (`bloeitijd-einde`- `bloeitijd-start`) as bloeitijd_in_maanden
from `plant`
where `bloeitijd-einde` - `bloeitijd-start` + 1 = 4


Docenten gesorterd op naam? Select * from teacher order by name
aflopend? dan: Select * from teacher order by name desc


asc (oplopend) is de default en hoef je dus niet op te geven.
desc (aflopend) wel.

select * from animal (voorbeeld code)
Tellen?
gebruik dan count(*) tussen de select en de from
select count(*)from teachers where lastname = ... (voorbeeld code)


front-end taal= html
back-end taal = python
werken met AskWhile (SQL)
wat weten bedrijven van jouw?:
betaalgegevens
naw = naam adres woonplaats
e-mail
geboortedatum

----------------------------------------------


tables (tabellen):
----------------
[              ]
----------------
[              ]
----------------
[              ]
----------------
[              ]
----------------
[              ]
----------------
[              ]
----------------


















select kolemnaam, kolomnaam of * from tabelnaam where coditie: id > 3 (veldnaam vergelijking waarde)







create table product(
id INTERGER PRIMARY KEY,
naam varchar(25),
soort interger,
prijs real,
prijs_10 real,
allergenen varchar(50)
)




create table product(
id INTERGER PRIMARY KEY,
naam varchar(25),
soort interger,
prijs real,
prijs_10 real,
allergenen varchar(50)
)



INSERT INTO product (id, naam, soort, prijs, prijs_10, allergenen) VALUES (2, 'Appelflappen', 3, 2.5, 14.0, 'Gluten, Eggs ' );

INSERT INTO product (id, naam, soort, prijs, prijs_10, allergenen) VALUES (1, 'Oliebollen', 2, 1.5, 13.0, 'Gluten, Eggs ' );

INSERT INTO your_table_name (id, naam, soort, prijs, prijs_10, allergenen) VALUES (1, 'Oliebollen', 2, 1.5, 13.0, 'Gluten, Eggs ' );


select * from product








id INTERGER PRIMARY KEY,
naam varchar(25),
soort interger,
prijs real,
prijs_10 real,
allergenen varchar(50)
















create table product(
id INTERGER PRIMARY KEY,
naam varchar(25),
soort interger,
prijs real,
heeft_DLC varchar(50)
)


create table product_2(
id INTERGER PRIMARY KEY,
naam varchar(25),
soort interger,
prijs real,
heeft_DLC varchar(50)
)
INSERT INTO product_2 (id, naam, soort, prijs, heeft_DLC) VALUES (1, 'EAW', 2, 19.5, 'ja ' );

